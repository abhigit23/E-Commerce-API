openapi: 3.0.0
info:
  title: E-Commerce
  contact: {}
  version: "1.0"
servers:
  - url: https://e-commerce-api-82en.onrender.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisterUserRequest"
                - example:
                    name: susan
                    email: susan@gmail.com
                    password: secret
            example:
              name: susan
              email: susan@gmail.com
              password: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginUserRequest"
                - example:
                    email: susan@gmail.com
                    password: secret
            example:
              email: susan@gmail.com
              password: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/logout:
    get:
      tags:
        - Auth
      summary: Logout User
      operationId: LogoutUser
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /users:
    get:
      tags:
        - User
      summary: Get All Users
      operationId: GetAllUsers
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the user id
    get:
      tags:
        - User
      summary: Get Single User
      operationId: GetSingleUser
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /users/showMe:
    get:
      tags:
        - User
      summary: Show Current User
      operationId: ShowCurrentUser
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /users/updateUser:
    patch:
      tags:
        - User
      summary: Update User
      operationId: UpdateUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateUserRequest"
                - example:
                    name: peter
            example:
              name: peter
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /users/updateUserPass:
    patch:
      tags:
        - User
      summary: Update User Password
      operationId: UpdateUserPassword
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateUserPasswordRequest"
                - example:
                    oldPass: secret
                    newPass: newSecret
            example:
              oldPass: secret
              newPass: newSecret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /products:
    get:
      tags:
        - Product
      summary: Get All Products
      operationId: GetAllProducts
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    post:
      tags:
        - Product
      summary: Create Product
      operationId: CreateProduct
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateProductRequest"
                - example:
                    name: product number 1
                    price: 25999
                    colors:
                      - "#ff0000"
                      - "#00ff00"
                      - "#0000ff"
                    company: marcos
                    description: Cloud bread VHS hell of banjo bicycle rights jianbing umami mumblecore etsy 8-bit pok pok +1 wolf. Vexillologist yr dreamcatcher waistcoat, authentic chillwave trust fund. Viral typewriter fingerstache pinterest pork belly narwhal. Schlitz venmo everyday carry kitsch pitchfork chillwave iPhone taiyaki trust fund hashtag kinfolk microdosing gochujang live-edge
                    category: office
            example:
              name: product number 1
              price: 25999
              colors:
                - "#ff0000"
                - "#00ff00"
                - "#0000ff"
              company: marcos
              description: Cloud bread VHS hell of banjo bicycle rights jianbing umami mumblecore etsy 8-bit pok pok +1 wolf. Vexillologist yr dreamcatcher waistcoat, authentic chillwave trust fund. Viral typewriter fingerstache pinterest pork belly narwhal. Schlitz venmo everyday carry kitsch pitchfork chillwave iPhone taiyaki trust fund hashtag kinfolk microdosing gochujang live-edge
              category: office
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /products/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the product id
    get:
      tags:
        - Product
      summary: Get Single Product
      operationId: GetSingleProduct
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    patch:
      tags:
        - Product
      summary: Update Product
      operationId: UpdateProduct
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateProductRequest"
                - example:
                    name: new testing product 2
            example:
              name: new testing product 2
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    delete:
      tags:
        - Product
      summary: Delete Product
      operationId: DeleteProduct
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /products/uploadImage:
    post:
      tags:
        - Product
      summary: Upload Image
      operationId: UploadImage
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              required:
                - image
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: false
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /products/{id}/reviews:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the product id
    get:
      tags:
        - Product
      summary: Get Single Product Reviews
      operationId: GetSingleProductReviews
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /reviews:
    get:
      tags:
        - Review
      summary: Get All Reviews
      operationId: GetAllReviews
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    post:
      tags:
        - Review
      summary: Create Review
      operationId: CreateReview
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateReviewRequest"
                - example:
                    product: 646cb69446d017e56ab38ce7
                    title: Best Product Ever!
                    comment: very comfy sofa recommended to purchase
                    rating: 5
            example:
              product: 646cb69446d017e56ab38ce7
              title: Best Product Ever!
              comment: very comfy sofa recommended to purchase
              rating: 5
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /reviews/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the review id
    get:
      tags:
        - Review
      summary: Get Single Review
      operationId: GetSingleReview
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    patch:
      tags:
        - Review
      summary: Update Review
      operationId: UpdateReview
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateReviewRequest"
                - example:
                    title: bad product
                    comment: Don't purchase this product
                    rating: 1
            example:
              title: bad product
              comment: Don't purchase this product
              rating: 1
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    delete:
      tags:
        - Review
      summary: Delete Review
      operationId: DeleteReview
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /orders:
    get:
      tags:
        - Order
      summary: Get All Orders
      operationId: GetAllOrders
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    post:
      tags:
        - Order
      summary: Create Order
      operationId: CreateOrder
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateOrderRequest"
                - example:
                    tax: 499
                    shippingFee: 799
                    items:
                      - name: bed
                        price: 2699
                        amount: 3
                        product: 646e40ba6984156d7e7ac78e
                      - name: chair
                        price: 2999
                        amount: 2
                        product: 646e40ba6984156d7e7ac78e
            example:
              tax: 499
              shippingFee: 799
              items:
                - name: bed
                  price: 2699
                  amount: 3
                  product: 646e40ba6984156d7e7ac78e
                - name: chair
                  price: 2999
                  amount: 2
                  product: 646e40ba6984156d7e7ac78e
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /orders/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the order id
    get:
      tags:
        - Order
      summary: Get Single Order
      operationId: GetSingleOrder
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    patch:
      tags:
        - Order
      summary: Update Order
      operationId: UpdateOrder
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateOrderRequest"
                - example:
                    paymentIntentId: someRandomId
            example:
              paymentIntentId: someRandomId
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /orders/showAllMyOrders:
    get:
      tags:
        - Order
      summary: Get Current User Orders
      operationId: GetCurrentUserOrders
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: susan
        email: susan@gmail.com
        password: secret
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: susan@gmail.com
        password: secret
    UpdateUserRequest:
      title: UpdateUserRequest
      required:
        - name
      type: object
      properties:
        name:
          type: string
      example:
        name: peter
    UpdateUserPasswordRequest:
      title: UpdateUserPasswordRequest
      required:
        - oldPass
        - newPass
      type: object
      properties:
        oldPass:
          type: string
        newPass:
          type: string
      example:
        oldPass: secret
        newPass: newSecret
    CreateProductRequest:
      title: CreateProductRequest
      required:
        - name
        - price
        - colors
        - company
        - description
        - category
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
          format: int32
        colors:
          type: array
          items:
            type: string
          description: ""
        company:
          type: string
        description:
          type: string
        category:
          type: string
      example:
        name: product number 1
        price: 25999
        colors:
          - "#ff0000"
          - "#00ff00"
          - "#0000ff"
        company: marcos
        description: Cloud bread VHS hell of banjo bicycle rights jianbing umami mumblecore etsy 8-bit pok pok +1 wolf. Vexillologist yr dreamcatcher waistcoat, authentic chillwave trust fund. Viral typewriter fingerstache pinterest pork belly narwhal. Schlitz venmo everyday carry kitsch pitchfork chillwave iPhone taiyaki trust fund hashtag kinfolk microdosing gochujang live-edge
        category: office
    UpdateProductRequest:
      title: UpdateProductRequest
      required:
        - name
      type: object
      properties:
        name:
          type: string
      example:
        name: new testing product 2
    CreateReviewRequest:
      title: CreateReviewRequest
      required:
        - product
        - title
        - comment
        - rating
      type: object
      properties:
        product:
          type: string
        title:
          type: string
        comment:
          type: string
        rating:
          type: integer
          format: int32
      example:
        product: 646cb69446d017e56ab38ce7
        title: Best Product Ever!
        comment: very comfy sofa recommended to purchase
        rating: 5
    UpdateReviewRequest:
      title: UpdateReviewRequest
      required:
        - title
        - comment
        - rating
      type: object
      properties:
        title:
          type: string
        comment:
          type: string
        rating:
          type: integer
          format: int32
      example:
        title: bad product
        comment: Don't purchase this product
        rating: 1
    CreateOrderRequest:
      title: CreateOrderRequest
      required:
        - tax
        - shippingFee
        - items
      type: object
      properties:
        tax:
          type: integer
          format: int32
        shippingFee:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
          description: ""
      example:
        tax: 499
        shippingFee: 799
        items:
          - name: bed
            price: 2699
            amount: 3
            product: 646e40ba6984156d7e7ac78e
          - name: chair
            price: 2999
            amount: 2
            product: 646e40ba6984156d7e7ac78e
    Item:
      title: Item
      required:
        - name
        - price
        - amount
        - product
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
          format: int32
        amount:
          type: integer
          format: int32
        product:
          type: string
      example:
        name: bed
        price: 2699
        amount: 3
        product: 646e40ba6984156d7e7ac78e
    UpdateOrderRequest:
      title: UpdateOrderRequest
      required:
        - paymentIntentId
      type: object
      properties:
        paymentIntentId:
          type: string
      example:
        paymentIntentId: someRandomId
tags:
  - name: Auth
  - name: User
  - name: Product
  - name: Review
  - name: Order
